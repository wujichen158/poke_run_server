package com.qdu.pokerun_server.api;

import com.qdu.pokerun_server.api.annotation.ParamLenAnnotation;
import com.qdu.pokerun_server.api.annotation.ParamOptional;
import com.qdu.pokerun_server.api.annotation.CheckListAnnotation;
import com.qdu.pokerun_server.repository.PlayerRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.lang.reflect.Array;
import java.util.List;
import java.util.Map;

@RestController
//@Permission(LeastId = 233)
public class VerController {
//    @Autowired
//    private final userMapper mapper;
//
//    public VerControler(userMapper mapper) {
//        this.mapper = mapper;
//    }
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PlayerRepository playerRepository;
//    @RequestMapping("/api/ver")
//    String showVersion() {
//        userRepository.findAll();
//        return "1.11";
//    }

    public class check1 {
        @ParamLenAnnotation.ParamLen(min = 2)
        public String a;
    }

    public class objList1 {
        @ParamOptional @CheckListAnnotation.CheckList(check1.class)
        public String a;
        @ParamLenAnnotation.ParamLen(min = 3)
        public String[] b;
    }
    public class objList2 {
        @CheckListAnnotation.CheckList(objList1.class)
        public objList1 obj;
        public String x;
        @ParamLenAnnotation.ParamLen(min = 2)
        public String[] bb;
    }

    @PostMapping(path="/api/all")
    public @ResponseBody
    Map<String, Object> getAllUsers(@RequestBody Map<String, Object> body) throws Exception {
        // This returns a JSON or XML with the users

        CheckListAnnotation.Check((Class<objList2>[]) Array.newInstance(objList2.class, 10), body);

        for (var entry : body.entrySet()) {
            System.out.println(entry.getKey());
            System.out.println(entry.getValue());
            if (entry.getValue() instanceof Map) {
                System.out.println("is map");
            }
            if (entry.getValue() instanceof List) {
                System.out.println("is list");
            }
        }
        return body;
    }
}
